    /* DASHBOARD.CSS */
    html,body {
        position: relative;
        margin: 0;
        padding: 0;
        height: 100vh;
        width: 100vw;
        overflow: hidden;
    }
    body {
        /* background: #333; */
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .dashboard {
        display: flex;
        position: relative;
        height: 80vh;
        width: 80vw;
        background: white;
    }

    .dash, .search-dash {
        position: absolute;
    }
    .filter {
        position: absolute;
        right: 0;
        top: -64px;
        background: gray;
        height: 60px;
        width: 60px;
        border-radius: 100%;
        transition: all 300ms ease-in-out;
    }
    .filter:hover {
        background: rgba(255, 255, 255, 0.75)
    }
    .filter .btn.toggle {
        opacity: .8;
        /* height: 24px;
        width: 24px; */
    }
    .filter .btn.toggle {
        transition: all 150ms ease;
    }
    .filter .btn.toggle svg {
        transition: all 200ms ease;
    }
    .filter:hover .btn.toggle svg {
        opacity: 0;
    } 
    .filter:hover::after {
        position: absolute;
        content: "";
        top: 0;
        right: 0;
        height: 100%;
        width: 385px;
        z-index: 1;
        /* background-color: rgba(255, 255, 255, 0.468); */
    }
    .filter-set {
        display: flex;
        height: 45px;
        /* width: fit-content; */
        /* background-color: white; */
        background-color: transparent;
        position: absolute;
        top: 12%;
        right: 72px;
        align-content: center;
        justify-content: center;
    }
    .filter-set > .btn {
        box-sizing: border-box;
        position: relative;
        margin: 0 8px;
        right: 0;
        align-self: center;
        height: 45px;
        width: 45px;
        border-radius: 100%;
        background: rgba(128, 128, 128, 0.778);
        display: flex;
        justify-content: center;
        align-items: center;
        transition: all 150ms ease-in-out;
        cursor: pointer;
        z-index: 2;
    }
    .filter-set > .btn:hover {
        background: rgba(255, 255, 255, 0.59);
    }
    .filter-set .btn svg {
        height: 24px;
        width: 24px;
    }
    .heading {
        position: absolute;
        left: 0;
        top: -64px;
        height: 60px;
        border-radius: 8px;
        width: fit-content;
        padding: 0 24px;
        background: lightblue;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 24px;
        font-family: Arial, Helvetica, sans-serif;
    }
    .icon-set {
        overflow: scroll;
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        bottom: 0;
        justify-self: center;
        height: 45px;
        width: 20vw;
        padding: 0 20px;
        box-sizing: border-box;
        background: whitesmoke;
        border-radius: 40px;
    }
    .icon-set svg {
        height: 24px;
        width: 24px;
        box-sizing: border-box;
        margin: 12px;
    }

    /* filter animation 1 */
    /* SLIDE OUT
        FORWARD 
        on hover wait 50ms
            margin = 8px;
            order = order# x 45px
            timing = timing to opacity 1 === time to position; (if 300ms to opacity 1 for step 1 ---> delay for step 2 === 300ms) (so they all translate at the same pace but fade in on a timing function)
        steps
            1st child --> fade in
                2nd child --> fade in + transform(order + margin) 
                    3rd child --> fade in + transform(order + margin)
                        4th child --> fade in + transform(order + margin)
                            5th child --> fade in + transform(order + margin)
        REVERSE
        wait 50ms
        scale the width of the after modal by the same rate so that it allows the hover to be attatched to the buttons
            5th Child --> fadeOut transform(0)
    */
    /* filter animation 2 */
    /* SLIDE UP BOUNCE 
        FORWARD
            1st child == first up
        REVERSE
            1st child == last down
    */